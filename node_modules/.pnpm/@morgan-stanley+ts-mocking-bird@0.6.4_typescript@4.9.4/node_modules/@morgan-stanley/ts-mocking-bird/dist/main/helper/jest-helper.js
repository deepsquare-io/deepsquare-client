"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runningInJest = exports.proxyJestModule = void 0;
var module_helper_1 = require("./module-helper");
/**
 * Wraps an existing module and prepares it for use in jest.mock
 *
 * jest.mock('../../relativeImportPath', () =>
 *      require('@morgan-stanley/ts-mocking-bird').proxyJestModule(
 *          require.resolve('../../relativeImportPath'),
 *      ),
 * );
 *
 * @param absolutePath
 */
function proxyJestModule(absolutePath) {
    if (typeof jest !== 'object' || typeof jest.requireActual !== 'function') {
        throw new Error("proxyJestModule can only be used when jest is available");
    }
    var realModule = jest.requireActual(absolutePath);
    var wrappedModule = module_helper_1.proxyModule(realModule);
    // eslint-disable-next-line @typescript-eslint/ban-types
    var brImport = jest.genMockFromModule(absolutePath);
    return __assign(__assign({}, brImport), wrappedModule);
}
exports.proxyJestModule = proxyJestModule;
function runningInJest() {
    return typeof expect.extend === 'function';
}
exports.runningInJest = runningInJest;
//# sourceMappingURL=jest-helper.js.map