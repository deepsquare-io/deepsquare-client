import { IParameterMatcher } from './contracts';
export declare function isParameterMatcher(matcher: unknown): matcher is IParameterMatcher<any>;
/**
 * Checks that the value is not undefined.
 * This will pass if the value is null (like jasmine does).
 * actualValue !== undefined
 */
export declare function toBeDefined(): IParameterMatcher<any>;
/**
 * Checks that the value is not undefined and not null.
 * actualValue != null
 */
export declare function hasValue(): IParameterMatcher<any>;
/**
 * Compares the expected value to the actual value with a strict equality check.
 * actualValue === expectedValue
 *
 * @param expectedValue
 */
export declare function toBe(expectedValue: any): IParameterMatcher<any>;
/**
 * Checks that the expected value is equal to the actual value using deep object comparison.
 * actualValue => isEqual(actualValue, expectedValue)
 *
 * @param expectedValue
 */
export declare function toEqual(expectedValue: any): IParameterMatcher<any>;
/**
 * Allows any value.
 */
export declare function any(): IParameterMatcher<any>;
/**
 * Returns a string representation of a value.
 * @param item
 */
export declare function mapItemToString(item: any): string;
