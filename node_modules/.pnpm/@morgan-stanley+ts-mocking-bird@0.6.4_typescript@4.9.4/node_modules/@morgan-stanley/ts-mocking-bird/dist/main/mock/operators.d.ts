import { ConstructorFunction, FunctionName, OperatorFunction } from './contracts';
/**
 * Mocks a function on an existing Mock.
 * Allows function call verification to be performed later in the test.
 * You can optionally set a mock function implementation that will be called.
 *
 * @param functionName
 * @param mockFunction
 */
export declare function setupFunction<T, C extends ConstructorFunction<T>, U extends FunctionName<T, C, 'function'>>(functionName: U, mockFunction?: T[U]): OperatorFunction<T, C>;
/**
 * Mocks a static function on an existing Mock.
 * Allows function call verification to be performed later in the test.
 * You can optionally set a mock function implementation that will be called.
 *
 * @param functionName
 * @param mockFunction
 */
export declare function setupStaticFunction<T, C extends ConstructorFunction<T>, U extends FunctionName<T, C, 'staticFunction'>>(functionName: U, mockFunction?: C[U]): OperatorFunction<T, C>;
/**
 * Sets up a property on an existing Mock.
 * Allows the value of the property to be defined.
 * Enables get and set function call verification to be performed.
 *
 * @param propertyName
 * @param value
 */
export declare function setupProperty<T, C extends ConstructorFunction<T>, U extends FunctionName<T, C, 'getter'>>(propertyName: U, value?: T[U]): OperatorFunction<T, C>;
/**
 * Sets up a static property on an existing Mock.
 * Allows the value of the property to be defined.
 * Enables get and set function call verification to be performed.
 *
 * @param propertyName
 * @param value
 */
export declare function setupStaticProperty<T, C extends ConstructorFunction<T>, U extends FunctionName<T, C, 'staticGetter'>>(propertyName: U, value?: C[U]): OperatorFunction<T, C>;
/**
 * Sets up a property on an existing Mock.
 * Allows getter and setter functions to be set.
 * Enables get and set function call verification to be performed.
 *
 * @param propertyName
 * @param value
 */
export declare function defineProperty<T, C extends ConstructorFunction<T>, U extends FunctionName<T, C, 'getter'>>(propertyName: U, getter?: () => T[U], setter?: (value: T[U]) => void): OperatorFunction<T, C>;
/**
 * Sets up a static property on an existing Mock with constructor.
 * Allows getter and setter functions to be set.
 * Enables get and set function call verification to be performed.
 *
 * @param propertyName
 * @param value
 */
export declare function defineStaticProperty<T, C extends ConstructorFunction<T>, U extends FunctionName<T, C, 'staticGetter'>>(propertyName: U, getter?: () => C[U], setter?: (value: C[U]) => void): OperatorFunction<T, C>;
